version: "3.8"

services:
  db:
    image: postgres:13.7-alpine
    container_name: db
    env_file:
      - .env
    ports:
      - "5434:5432"
    volumes:
      - my_postgres_vol:/var/lib/postgresql/data

  # db_admin:
  #   image: dpage/pgadmin4
  #   container_name: db_admin
  #   env_file:
  #     - .env
  #   ports:
  #     - "5050:80"
  #   volumes:
  #     - my_pgadmin_vol:/var/lib/pgadmin
  #   depends_on:
  #     - db

  redis:
    image: redis:6.2.7-alpine
    container_name: redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL,CONFIG
    command: redis-server --save 60 --maxmemory 100mb
    ports:
      - '6379:6379'
    volumes: 
      - my_redis:/data
  
  celery:
    build:
      context: .
      dockerfile: ./docker/django/Dockerfile
    command: celery -A core worker -B -l INFO
    # volumes:
    #   - .:/usr/src/app
    environment:
      - DEBUG=1
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
    depends_on:
      - backend
      - redis
  
  backend:
    container_name: backend
    build:
      context: .
      dockerfile: ./docker/django/Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    env_file:
      - .env
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - db

  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: ./docker/react/Dockerfile
    command: npm start
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - .:/code
    ports:
      - 3000:3000
    expose:
      - 3000

volumes:
  my_postgres_vol:
  my_pgadmin_vol:
  my_redis:
    driver: local